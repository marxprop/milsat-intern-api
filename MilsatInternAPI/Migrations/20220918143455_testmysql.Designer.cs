// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MilsatInternAPI.Data;

#nullable disable

namespace MilsatInternAPI.Migrations
{
    [DbContext(typeof(MilsatInternAPIContext))]
    [Migration("20220918143455_testmysql")]
    partial class testmysql
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MilsatInternAPI.Models.Intern", b =>
                {
                    b.Property<Guid>("InternId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("MentorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("InternId");

                    b.HasIndex("MentorId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Intern");
                });

            modelBuilder.Entity("MilsatInternAPI.Models.Mentor", b =>
                {
                    b.Property<Guid>("MentorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("MentorId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Mentor");

                    b.HasData(
                        new
                        {
                            MentorId = new Guid("899af72f-3a54-430b-accd-d9094fa1ba37"),
                            CreatedOn = new DateTime(2022, 9, 18, 14, 34, 55, 527, DateTimeKind.Utc).AddTicks(3752),
                            Status = 0,
                            UserId = new Guid("f3ef28d8-ff81-4447-9025-265d5c173686")
                        },
                        new
                        {
                            MentorId = new Guid("aa5f5c50-25ac-4210-bceb-4fdee58d1b7f"),
                            CreatedOn = new DateTime(2022, 9, 18, 14, 34, 55, 527, DateTimeKind.Utc).AddTicks(3770),
                            Status = 0,
                            UserId = new Guid("8cbdd6c2-2c0d-42f1-b2aa-41f4a25e4d33")
                        });
                });

            modelBuilder.Entity("MilsatInternAPI.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Department")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime>("TokenCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("TokenExpires")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("f3ef28d8-ff81-4447-9025-265d5c173686"),
                            Department = 1,
                            Email = "mentor1@gmail.com",
                            FirstName = "Sodiq",
                            LastName = "Agboola",
                            PasswordHash = new byte[] { 122, 114, 197, 7, 0, 252, 241, 221, 236, 180, 206, 49, 29, 237, 246, 71, 45, 75, 203, 115, 6, 233, 163, 144, 61, 171, 209, 212, 163, 40, 152, 184, 54, 70, 165, 16, 101, 40, 252, 244, 84, 116, 31, 236, 34, 199, 224, 30, 115, 226, 40, 44, 237, 66, 64, 92, 251, 228, 190, 147, 55, 139, 255, 179 },
                            PasswordSalt = new byte[] { 174, 217, 244, 217, 8, 255, 46, 7, 50, 83, 56, 174, 217, 188, 147, 93, 122, 187, 92, 186, 70, 117, 104, 78, 114, 155, 200, 226, 52, 214, 105, 215, 171, 16, 13, 81, 147, 34, 237, 70, 247, 163, 92, 97, 226, 154, 148, 88, 66, 64, 105, 99, 133, 85, 210, 172, 109, 48, 241, 90, 103, 128, 57, 89, 186, 228, 55, 219, 46, 22, 145, 14, 93, 183, 74, 84, 176, 55, 204, 77, 243, 57, 86, 42, 69, 32, 226, 37, 113, 226, 197, 65, 102, 23, 32, 133, 88, 89, 95, 64, 139, 6, 219, 18, 159, 61, 229, 212, 24, 30, 176, 63, 26, 216, 95, 90, 163, 1, 46, 131, 133, 78, 101, 241, 183, 99, 213, 177 },
                            PhoneNumber = "string",
                            Role = 2,
                            TokenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("8cbdd6c2-2c0d-42f1-b2aa-41f4a25e4d33"),
                            Department = 1,
                            Email = "mentor2@gmail.com",
                            FirstName = "Sodiq",
                            LastName = "Agboola",
                            PasswordHash = new byte[] { 143, 153, 224, 144, 192, 18, 20, 247, 164, 137, 182, 230, 56, 9, 129, 143, 196, 156, 68, 83, 125, 183, 49, 65, 1, 97, 224, 248, 146, 76, 212, 58, 22, 179, 36, 130, 115, 172, 240, 26, 1, 22, 68, 115, 186, 60, 148, 105, 61, 248, 21, 150, 152, 45, 127, 223, 188, 242, 234, 157, 246, 45, 33, 61 },
                            PasswordSalt = new byte[] { 160, 43, 140, 121, 175, 20, 235, 105, 68, 91, 207, 213, 65, 106, 205, 26, 141, 227, 40, 212, 152, 61, 18, 95, 157, 180, 98, 246, 130, 210, 140, 108, 17, 35, 126, 86, 195, 253, 203, 194, 150, 134, 146, 111, 130, 14, 14, 219, 212, 174, 22, 186, 55, 210, 201, 216, 134, 197, 178, 139, 123, 22, 177, 117, 237, 114, 137, 58, 210, 203, 19, 229, 163, 170, 154, 140, 179, 64, 128, 14, 192, 21, 70, 140, 178, 224, 243, 230, 113, 21, 210, 28, 190, 183, 20, 112, 169, 211, 214, 158, 201, 63, 86, 8, 78, 252, 110, 186, 164, 8, 254, 32, 128, 203, 122, 88, 240, 148, 40, 210, 65, 40, 144, 151, 255, 224, 178, 11 },
                            PhoneNumber = "string",
                            Role = 2,
                            TokenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = new Guid("0a24644e-8b89-42ff-a0c9-59a13987ce74"),
                            Department = 6,
                            Email = "admin@milsat.com",
                            FirstName = "admin",
                            LastName = "admin",
                            PasswordHash = new byte[] { 184, 193, 159, 188, 219, 93, 233, 98, 253, 44, 92, 202, 143, 85, 255, 155, 172, 149, 50, 107, 66, 76, 0, 4, 38, 129, 195, 23, 75, 201, 59, 99, 179, 187, 254, 98, 247, 16, 124, 38, 139, 163, 178, 190, 223, 85, 149, 250, 165, 183, 233, 228, 248, 201, 14, 132, 204, 53, 211, 13, 96, 46, 41, 51 },
                            PasswordSalt = new byte[] { 178, 125, 6, 73, 126, 119, 71, 42, 255, 122, 51, 131, 110, 140, 136, 38, 21, 27, 201, 143, 114, 213, 152, 25, 112, 26, 115, 237, 42, 0, 44, 66, 118, 84, 181, 31, 183, 247, 238, 89, 235, 99, 53, 167, 213, 77, 43, 111, 247, 243, 142, 8, 20, 164, 3, 213, 52, 198, 53, 42, 61, 122, 142, 49, 174, 117, 140, 181, 82, 245, 234, 71, 130, 227, 34, 12, 68, 21, 48, 128, 131, 249, 10, 178, 170, 116, 67, 73, 227, 219, 107, 69, 67, 47, 185, 25, 168, 98, 39, 143, 100, 99, 175, 155, 113, 238, 26, 154, 223, 52, 166, 89, 219, 59, 146, 204, 51, 63, 182, 246, 230, 119, 198, 50, 41, 35, 140, 144 },
                            PhoneNumber = "home",
                            Role = 0,
                            TokenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MilsatInternAPI.Models.Intern", b =>
                {
                    b.HasOne("MilsatInternAPI.Models.Mentor", "Mentor")
                        .WithMany("Interns")
                        .HasForeignKey("MentorId");

                    b.HasOne("MilsatInternAPI.Models.User", "User")
                        .WithOne("Intern")
                        .HasForeignKey("MilsatInternAPI.Models.Intern", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mentor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MilsatInternAPI.Models.Mentor", b =>
                {
                    b.HasOne("MilsatInternAPI.Models.User", "User")
                        .WithOne("Mentor")
                        .HasForeignKey("MilsatInternAPI.Models.Mentor", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MilsatInternAPI.Models.Mentor", b =>
                {
                    b.Navigation("Interns");
                });

            modelBuilder.Entity("MilsatInternAPI.Models.User", b =>
                {
                    b.Navigation("Intern")
                        .IsRequired();

                    b.Navigation("Mentor")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
